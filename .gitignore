###########################################################################
#    Computer Project #3
#
#    Algorithm
#        Prompt user: "Do you wish to process a triangle?"
#        if yes the user enters a loop or else exit loop
#            Input the lengths of the 3 sides of triangle
#            Check if sum of any two sides > third
#                Calculate the angles in degrees and radians
#                Calculate perimeter, semi-perimeter and area
#                Output the values
#                Check and output if triangle is isosceles, scalene, 
#                equilateral, right, oblique and obtuse
#            Elif, check and output if triangle is degenerate
#            Else, output that it is not a triangle
#       Print number of valid triangles    
###########################################################################

import math

BANNER = '''

╭━━━━╮╱╱╱╱╱╱╱╱╱╱╭╮
┃╭╮╭╮┃╱╱╱╱╱╱╱╱╱╱┃┃
╰╯┃┃┣┻┳┳━━┳━╮╭━━┫┃╭━━╮
╱╱┃┃┃╭╋┫╭╮┃╭╮┫╭╮┃┃┃┃━┫
╱╱┃┃┃┃┃┃╭╮┃┃┃┃╰╯┃╰┫┃━┫
╱╱╰╯╰╯╰┻╯╰┻╯╰┻━╮┣━┻━━╯
╱╱╱╱╱╱╱╱╱╱╱╱╱╭━╯┃
╱╱╱╱╱╱╱╱╱╱╱╱╱╰━━╯
'''

print(BANNER)
print()

count_int=0  #Variable count_int for number of "valid" triangles
main_str = input("Do you wish to process a triangle (Y or N)?  ")
while main_str=='Y' or main_str=='y':  # Loop for users who say Y
    #Prompt to input length of 3 sides of triangle
    sideone_int = int(input('\nEnter length of side AB: ')) 
    sidetwo_int = int(input('\nEnter length of side BC: '))
    sidethree_int = int(input('\nEnter length of side CA: '))
    
    #If sum of any two sides of triangle > the third
    if sideone_int + sidetwo_int > sidethree_int and \
    sidetwo_int + sidethree_int > sideone_int and \
    sideone_int + sidethree_int > sidetwo_int:
        #Using the cosine law- calculate angles of triangle
        angleoner_flt = math.acos((sideone_int**2 + sidethree_int**2 \
        - sidetwo_int**2) / (2*sideone_int*sidethree_int))
        angletwor_flt = math.acos((sideone_int**2 + sidetwo_int**2 \
        - sidethree_int**2) / (2*sideone_int*sidetwo_int))
        anglethreer_flt = math.acos((sidetwo_int**2 + sidethree_int**2 \
        - sideone_int**2) / (2*sidetwo_int*sidethree_int))
        
        #Converting angles: radians --> decimals
        angleoned_flt = angleoner_flt * 180 / math.pi
        angletwod_flt = angletwor_flt * 180 / math.pi
        anglethreed_flt = anglethreer_flt * 180 / math.pi
        
        #Calculating perimeter, semi-perimeter and area of triangle
        perimeter_flt = float(sideone_int + sidetwo_int + sidethree_int)
        semiperimeter_flt = perimeter_flt/2
        sp = semiperimeter_flt
        area_flt = math.sqrt(sp*(sp-sideone_int)*(sp-sidetwo_int) \
                             *(sp-sidethree_int))  #Heron's formula
        
        print("\n\n  Valid Triangle" )
        
        print("\n  Triangle sides:")
        print("    Length of side AB:", float(sideone_int))
        print("    Length of side BC:", float(sidetwo_int))
        print("    Length of side CA:", float(sidethree_int))
        
        print("\n  Degree measure of interior angles:")
        #Rounding angles to 1 d.p.
        print("    Angle A:", round(angleoned_flt, 1))
        print("    Angle B:", round(angletwod_flt, 1))
        print("    Angle C:", round(anglethreed_flt, 1))
        
        print("\n  Radian measure of interior angles:")
        #Rounding angles to 1 d.p.
        print("    Angle A:", round(angleoner_flt, 1))
        print("    Angle B:", round(angletwor_flt, 1))
        print("    Angle C:", round(anglethreer_flt, 1))
        
        print("\n  Perimeter and Area of triangle:")
        print("    Perimeter of triangle:", perimeter_flt)
        #Rounding area of triangle to 1 d.p.
        print("    Area of triangle:", round(area_flt, 1))
        
        print("\n  Types of triangle:")
        if sideone_int!=sidetwo_int and sideone_int!=sidethree_int and \
            sidetwo_int!=sidethree_int: #Checking if it is a scalene triangle
            print("    Scalene Triangle" )
        
        elif sideone_int == sidetwo_int and sidetwo_int == sidethree_int \
            and sideone_int == sidethree_int: #Checking for equilateral 
            print("    Isosceles Triangle")
            print("    Equilateral Triangle")
        else:
            print("    Isosceles Triangle")

         #If any angle is right angles
        if angleoned_flt == 90 or angletwod_flt == 90 \
            or anglethreed_flt == 90:
            print("    Right Triangle")
        else:
            print("    Oblique Triangle")
        
        #If any angle is obtuse
        if angleoned_flt > 90 or angletwod_flt > 90 \
            or anglethreed_flt > 90:
            print("    Obtuse Triangle")

        count_int += 1

    elif sideone_int + sidetwo_int == sidethree_int or \
    sidetwo_int + sidethree_int**2 == sideone_int**2 or \
    sideone_int**2 + sidethree_int**2 == sidetwo_int**2: # 
        print("\n\n  Degenerate Triangle")
    else:
        print("\n\n  Not a Triangle" )
    
    main_str=input("\nDo you wish to process another triangle? (Y or N) ")

#Printing the number of "valid" triangles
print("\nNumber of valid triangles:", count_int)
